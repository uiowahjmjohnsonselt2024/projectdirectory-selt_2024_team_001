%div{:style => "width: 100%; height: 60px; background-color: #333; color: white; display: flex; justify-content: space-between; align-items: center; box-sizing: border-box; padding: 0 10px;"}
  %a{:href => "/storefront/store_menu", :style => "color: white; text-decoration: none; font-size: 18px; display: flex; align-items: center;"}
    &#x2190; Back

  %form{:action => "/storefront/modules", :method => "get", :style => "flex: 1; display: flex; justify-content: center;"}
    %input{:type => "text", :name => "search", :placeholder => "Search for modules...", :value => params[:search], :style => "width: 60%; padding: 5px; border: none; border-radius: 5px;"}
    %button{:type => "submit", :style => "padding: 5px 10px; border: none; border-radius: 5px; background-color: #555; color: white; margin-left: 10px;"} Search

  %div{:style => "font-size: 18px; text-align: right;"}
    Gold:
    %span{:id => "gold-amount"}= @gold

%div{:style => "background-color: #aaa; width: 100%; height: calc(100vh - 60px); padding: 20px; box-sizing: border-box;"}
  - if @items.empty? && params[:search].present?
    %div{:style => "margin-top: 20px; text-align: center; color: white;"} No results found for "#{params[:search]}"
  - else
    %div.items-container-wrapper{:style => "width: 100%; overflow-x: auto; white-space: nowrap; padding: 10px; box-sizing: border-box;"}
      %div.items-container{:style => "display: inline-flex; gap: 20px;"}
        - @items.each do |item|
          %div.item-box{:style => "width: 200px; height: 300px; background-color: #555; color: white; text-align: center; display: flex; flex-direction: column; align-items: center; border-radius: 10px; padding: 10px; box-sizing: border-box;"}
            %div.item-title{:style => "font-size: 18px; font-weight: bold; margin-bottom: 10px;"}= item[:title]
            %div.image-placeholder{:style => "width: 150px; height: 100px; background-color: #777; border-radius: 5px; margin-bottom: 10px; display: flex; justify-content: center; align-items: center;"}
              Image Here
            %div.item-description{:style => "font-size: 14px; margin-top: auto; margin-bottom: 10px; overflow: hidden; text-overflow: ellipsis; white-space: normal; word-wrap: break-word; max-height: 60px; line-height: 1.2;"}= item[:description]
            %div.item-cost-button{:style => "width: 100%; background-color: #333; color: #fff; font-weight: bold; text-align: center; padding: 5px; border-radius: 5px; cursor: pointer;", onclick: "confirmPurchase('#{item[:title]}', #{item[:cost]})"}
              Cost: #{item[:cost]} Gold

:javascript
  let currentGold = #{ @gold };

  function confirmPurchase(itemName, itemCost) {
    if (confirm(`Are you sure you want to buy ${itemName} for ${itemCost} Gold?`)) {
      if (currentGold >= itemCost) {
        currentGold -= itemCost;
        document.getElementById('gold-amount').textContent = currentGold;
        alert(`You bought ${itemName} for ${itemCost} Gold!`);

        // Send the purchase request to the server
        fetch('/storefront/update_gold', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({ gold_spent: itemCost })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            console.log('Gold updated on the server:', data.new_gold);
          } else {
            console.error('Server error:', data.message);
          }
        })
        .catch(error => {
          console.error('Error updating gold on server:', error);
        });
      } else {
        alert("You don't have enough gold to buy this item!");
      }
    }
  }
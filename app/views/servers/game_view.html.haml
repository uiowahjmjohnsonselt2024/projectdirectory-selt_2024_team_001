%html{ lang: "en" }
  %head
    %title Shards of the Grid
    %meta{ charset: "UTF-8" }
    %meta{ name: "viewport", content: "width=device-width, initial-scale=1.0" }
    = csrf_meta_tags
    = action_cable_meta_tag
    = stylesheet_link_tag 'game_view', media: 'all'


  :javascript
      document.addEventListener('turbo:load', () => {
      const gridCells = document.querySelectorAll('.grid-cell');
      const movePlayerButton = document.getElementById('move-player-btn');
      const modal = document.getElementById('modal');
      const dropdownMenu = document.querySelector('.dropdown-menu');
      const characterIcon = document.getElementById('character-icon');

      characterIcon.addEventListener('click', (event) => {
        event.stopPropagation();
        const isMenuVisible = dropdownMenu.style.display === 'block';
        dropdownMenu.style.display = isMenuVisible ? 'none' : 'block';
      });

      document.addEventListener('click', (event) => {
        if (!dropdownMenu.contains(event.target) && event.target !== characterIcon) {
          dropdownMenu.style.display = 'none';
        }
      });

      gridCells.forEach((cell) => {
        cell.addEventListener('click', () => {
          gridCells.forEach((c) => c.classList.remove('selected'));
          cell.classList.add('selected');
          document.querySelector('.modal-description').textContent =
            `You clicked on cell at row ${cell.dataset.row}, column ${cell.dataset.column}`;
          modal.style.display = 'block';
        });
      });

      movePlayerButton.addEventListener('click', async () => {
        const selectedCell = document.querySelector('.grid-cell.selected');
        if (!selectedCell) {
          alert('Please select a grid cell first.');
          return;
        }

        const serverId = document.getElementById('game-container').dataset.serverId;
        const playerId = document.getElementById('game-container').dataset.playerId;

        const targetRow = selectedCell.dataset.row;
        const targetColumn = selectedCell.dataset.column;

        fetch(`/servers/${serverId}/players/${playerId}/update_position`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          },
          body: JSON.stringify({ player: { row: targetRow, column: targetColumn } }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              location.reload();
            } else {
              alert(data.error || "An error occurred.");
            }
          })
          .catch((error) => console.error("Error:", error));
      });

      document.querySelector('.close-button').addEventListener('click', () => {
        modal.style.display = 'none';
      });
    });






  %body
    %header.title Shards of the Grid
    #game-container{ data: { server_id: @server.id, player_id: @player.id } }
      #game-logo
        = image_tag "GameLogo.png", alt: "Game Logo", height: "50", width: "50"

      .game-grid
        - @server.grid_tiles.order(:row, :column).each_slice(6) do |row_tiles|
          %div.row
            - row_tiles.each do |tile|
              %div.grid-cell{
                class: tile.row == @player.row && tile.column == @player.column ? 'player-current' : '',
                data: { row: tile.row, column: tile.column }
              }
                %p= "Cell #{tile.row}, #{tile.column}"
                  


      .chat-container
        #character-icon-container
          #character-icon{ tabindex: "0" }
            = image_tag "baseAvatar.png", alt: "Character Icon", height: "50", width: "50"
          .dropdown-menu
            = link_to 'User Profile', user_profile_path, class: 'dropdown-btn'
            = link_to 'Buy Shards', shard_purchase_path, class: 'dropdown-btn'
            = link_to 'Settings', welcome_settings_path, class: 'dropdown-btn'
            = link_to 'Store', store_menu_storefront_index_path, class: 'dropdown-btn'
            = link_to 'Server', servers_path, class: 'dropdown-btn'
            = button_to 'Logout', logout_path, method: :delete, class: 'dropdown-btn', form: { class: 'inline-form' }
        .col-md-8.col-sm-8.bg-dark.text-light#room_container
        #single_room
          %h4.text-center= @server.server_num
          = turbo_stream_from @server
          #messages
            - if @messages.present?
              - @messages.each do |message|
                %div.message
                  %p
                    %strong= message.user.email
                    = message.body
          = render partial: 'layouts/new_message_form'




%div#modal.modal
  .modal-content
    %button.close-button
      = image_tag 'planets/11test.png', alt: 'Close', class: 'close-icon'
    .modal-description Move the player to the selected cell.
    .modal-buttons
      %button#move-player-btn.move-player-btn Move Player
      %button Collect Resource
      %button Button 3
      %button Button 4